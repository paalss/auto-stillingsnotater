{"version":3,"sources":["assets/finn.png","assets/nav-logo-red.svg","App.js","reportWebVitals.js","index.js"],"names":["App","logo","useState","input","setInput","platform","setPlatform","originalinfo","output","setOutput","textEl","useRef","determinePlatform","useCallback","includes","addGeneralInfoToOutput","breakLineBreaks","split","data","map","item","findIndex","element","index","prev","generalInfo","addContactInfoToOutput","skipThisIndex","undefined","filter","contactInfo","addPlaceToOutput","metadataIndex","place","setInfoToOutput","addInstancesOfPhraseToOutput","phrase","dataGroup","phraseIndexArray","indexOf","newPhraseIsFound","count","phraseIndex","textWhereItsUsedBeforeAndAfter","substr","lenght","extractValuesFromInput","useEffect","finnLogo","navLogo","className","src","alt","name","id","value","onChange","current","ref","yearsExperience","e","line","experience","contentEditable","gradeDoc","diploma","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fedb6e4e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/finn.4fd1d574.png\";","export default __webpack_public_path__ + \"static/media/nav-logo-red.d017d18d.svg\";","import \"./App.css\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import \"arch-editor/dist/arch-editor.css\";\r\n// import { ArchEditor, BlockToolbar, ArchEditorProvider } from \"arch-editor\";\r\n\r\nimport finnLogo from \"./assets/finn.png\";\r\nimport navLogo from \"./assets/nav-logo-red.svg\";\r\n\r\nfunction App() {\r\n  // const defaultState = ``;\r\n  const [input, setInput] = useState(\"\");\r\n  const [platform, setPlatform] = useState();\r\n  const [output, setOutput] = useState({ originalinfo: [\"array\", \"barray\"] });\r\n  const textEl = useRef(null);\r\n\r\n  // console.log(output);\r\n\r\n  const changehandler = () => {\r\n    setInput(textEl.current.value);\r\n  };\r\n\r\n  const determinePlatform = useCallback(() => {\r\n    if (input.includes(\"Min FINN\")) {\r\n      setPlatform(\"Finn\");\r\n    } else if (input.includes(\"NAV og samfunn\")) {\r\n      setPlatform(\"Nav\");\r\n    }\r\n  }, [input]);\r\n\r\n  const addGeneralInfoToOutput = useCallback(() => {\r\n    if (platform === \"Finn\") {\r\n      const breakLineBreaks = input.split(\"\\n\");\r\n\r\n      const metadata = [\r\n        \"Arbeidsgiver\",\r\n        \"Stillingstittel\",\r\n        \"Frist\",\r\n        \"Ansettelsesform\",\r\n      ];\r\n\r\n      const metadataIndexes = metadata.map((item) => {\r\n        return breakLineBreaks.findIndex((element) => element === item);\r\n      });\r\n\r\n      const data = metadataIndexes.map((index) => {\r\n        return (\r\n          <>\r\n            <b>**{breakLineBreaks[index]}:**</b> {breakLineBreaks[index + 1]}\r\n          </>\r\n        );\r\n      });\r\n\r\n      setOutput((prev) => {\r\n        return { ...prev, generalInfo: data };\r\n      });\r\n    }\r\n  }, [platform, input]);\r\n\r\n  const addContactInfoToOutput = useCallback(() => {\r\n    if (platform === \"Finn\") {\r\n      const breakLineBreaks = input.split(\"\\n\");\r\n\r\n      const metadata = [\"Kontaktperson\", \"Stillingstittel\", \"Mobil\", \"Telefon\"];\r\n\r\n      const metadataIndexes = metadata.map((item) => {\r\n        // Stillingstittel står tidligere i annonsen også,\r\n        // men det er ikke den vi skal hente. Koden skal finne DEN ANDRE instansen\r\n        let skipThisIndex = -1;\r\n        if (item === \"Stillingstittel\") {\r\n          skipThisIndex = breakLineBreaks.findIndex(\r\n            (element) => element === item\r\n          );\r\n          return breakLineBreaks.findIndex(\r\n            (element, index) => element === item && index !== skipThisIndex\r\n          );\r\n        } else {\r\n          const index = breakLineBreaks.findIndex(\r\n            (element) => element === item\r\n          );\r\n\r\n          return index !== -1 ? index : undefined; // hvis ikke fantes i dokumentet, merk det med undefined\r\n        }\r\n      });\r\n\r\n      const foundMetadataIndexes = metadataIndexes.filter(\r\n        (element) => element !== undefined\r\n      ); // de vi ikke fant, undefined, skal ikke være med i listen\r\n\r\n      const data = foundMetadataIndexes.map((index) => {\r\n        return (\r\n          <>\r\n            <b>**{breakLineBreaks[index]}:**</b> {breakLineBreaks[index + 1]}\r\n          </>\r\n        );\r\n      });\r\n\r\n      setOutput((prev) => {\r\n        return { ...prev, contactInfo: data };\r\n      });\r\n    }\r\n  }, [platform, input]);\r\n\r\n  const addPlaceToOutput = useCallback(() => {\r\n    const breakLineBreaks = input.split(\"\\n\");\r\n    const metadata = \"Kart\";\r\n    const metadataIndex = breakLineBreaks.findIndex(\r\n      (element) => element === metadata\r\n    );\r\n    const place = breakLineBreaks[metadataIndex - 1];\r\n    setOutput((prev) => {\r\n      return { ...prev, place: place };\r\n    });\r\n  }, [input]);\r\n\r\n  const setInfoToOutput = useCallback(() => {\r\n    addGeneralInfoToOutput();\r\n    addContactInfoToOutput();\r\n    addPlaceToOutput();\r\n  }, [addGeneralInfoToOutput, addContactInfoToOutput, addPlaceToOutput]);\r\n\r\n  const addInstancesOfPhraseToOutput = useCallback(\r\n    (phrase, dataGroup) => {\r\n      if (input.includes(phrase)) {\r\n        const phraseIndex = input.indexOf(phrase);\r\n        let phraseIndexArray = [phraseIndex];\r\n        let newPhraseIsFound = true;\r\n        let count = 0;\r\n        while (newPhraseIsFound) {\r\n          const phraseIndex = input.indexOf(\r\n            phrase,\r\n            phraseIndexArray[count] + 1\r\n          );\r\n          if (phraseIndex === -1) {\r\n            newPhraseIsFound = false;\r\n          } else {\r\n            phraseIndexArray = [...phraseIndexArray, phraseIndex];\r\n            count++;\r\n          }\r\n        }\r\n        const data = phraseIndexArray.map((index) => {\r\n          const lenght = 90;\r\n          const textWhereItsUsed = input.substr(index - lenght, lenght * 2);\r\n          const textWhereItsUsedBeforeAndAfter = textWhereItsUsed.split(phrase);\r\n          return [\r\n            textWhereItsUsedBeforeAndAfter[0],\r\n            <>\r\n              <b>{phrase}</b>\r\n            </>,\r\n            textWhereItsUsedBeforeAndAfter[1],\r\n          ];\r\n        });\r\n        setOutput((prev) => {\r\n          const result = { ...prev, [dataGroup]: data };\r\n          return result;\r\n        });\r\n      }\r\n    },\r\n    [input]\r\n  );\r\n\r\n  // const eeeeeeeeeeeeee = useCallback(() => {\r\n  //   if (input.includes()) {\r\n\r\n  //   }\r\n  // }, [input]);\r\n\r\n  const extractValuesFromInput = useCallback(() => {\r\n    determinePlatform();\r\n    setInfoToOutput();\r\n    addInstancesOfPhraseToOutput(\"års erfaring\", \"yearsExperience\");\r\n    addInstancesOfPhraseToOutput(\"erfaring\", \"experience\");\r\n    addInstancesOfPhraseToOutput(\"karakter\", \"gradeDoc\");\r\n    addInstancesOfPhraseToOutput(\"vitnemål\", \"diploma\");\r\n  }, [determinePlatform, setInfoToOutput, addInstancesOfPhraseToOutput]);\r\n\r\n  useEffect(() => {\r\n    extractValuesFromInput();\r\n  }, [input, extractValuesFromInput]);\r\n\r\n  let logo;\r\n  if (platform === \"Finn\") {\r\n    logo = finnLogo;\r\n  }\r\n  if (platform === \"Nav\") {\r\n    logo = navLogo;\r\n  }\r\n\r\n  // console.info(output);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bar\">\r\n        {logo ? (\r\n          <img src={logo} alt=\"logo\" />\r\n        ) : (\r\n          <h2>Kopier alt tekstinnhold i FINN-annonse og lim inn</h2>\r\n        )}\r\n      </div>\r\n      <div className=\"flex row-desktop\">\r\n        <div className=\"half-width-desktop\">\r\n          <textarea\r\n            name=\"textarea\"\r\n            id=\"\"\r\n            value={input}\r\n            onChange={changehandler}\r\n            ref={textEl}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"flex column half-width-desktop\">\r\n          <div>\r\n            <h2>Erfaring</h2>\r\n            {output.yearsExperience && <h3>Års erfaring</h3>}\r\n            {output.yearsExperience &&\r\n              output.yearsExperience.map((e, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    {index > 0 && <hr />}\r\n                    <p>\r\n                      {e.map((line, index) => {\r\n                        return <span key={index}>{line}</span>;\r\n                      })}\r\n                    </p>\r\n                  </span>\r\n                );\r\n              })}\r\n            {output.experience && <h3>Erfaring</h3>}\r\n            {output.experience &&\r\n              output.experience.map((e, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    {index > 0 && <hr />}\r\n                    <p>\r\n                      {e.map((line, index) => {\r\n                        return <span key={index}>{line}</span>;\r\n                      })}\r\n                    </p>\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n          <div>\r\n            <h2>Info</h2>\r\n            <p>For å putte inn i Trello-card-beskrivelse</p>\r\n            <div contentEditable={false}>\r\n              <p>\r\n                {output.generalInfo &&\r\n                  output.generalInfo.map((line, index) => {\r\n                    return (\r\n                      <span key={index}>\r\n                        {/* Er anti-pattern å bruke index som key */}\r\n                        {line} <br />\r\n                      </span>\r\n                    );\r\n                  })}\r\n              </p>\r\n              <p>\r\n                {output.contactInfo &&\r\n                  output.contactInfo.map((line, index) => {\r\n                    return (\r\n                      <span key={index}>\r\n                        {line} <br />\r\n                      </span>\r\n                    );\r\n                  })}\r\n              </p>\r\n              {output.place && output.place}\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h2>Vedlegg</h2>\r\n            {output.gradeDoc && <h3>Karakter</h3>}\r\n            {output.gradeDoc &&\r\n              output.gradeDoc.map((e, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    {index > 0 && <hr />}\r\n                    <p>\r\n                      {e.map((line, index) => {\r\n                        return <span key={index}>{line}</span>;\r\n                      })}\r\n                    </p>\r\n                  </span>\r\n                );\r\n              })}\r\n            {output.diploma && <h3>Vitnemål</h3>}\r\n            {output.diploma &&\r\n              output.diploma.map((e, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    {index > 0 && <hr />}\r\n                    <p>\r\n                      {e.map((line, index) => {\r\n                        return <span key={index}>{line}</span>;\r\n                      })}\r\n                    </p>\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}